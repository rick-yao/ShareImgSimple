{"version":3,"sources":["first.svg","components/Header.tsx","components/Footer.tsx","components/Loading.tsx","App.tsx","index.tsx","models/index.tsx","store/users.tsx","store/auth.ts","store/image.tsx","store/history.ts","store/index.ts"],"names":["Header","styled","header","Logo","img","StyledLink","NavLink","Login","div","StyledButton","Button","Component","observer","useStore","AuthStore","UserStore","HistoryStore","ImageStore","history","useHistory","src","LogoUrl","alt","to","exact","activeClassName","currentUser","attributes","username","type","onClick","resetUser","reset","logOut","push","Footer","footer","component","justify","align","style","minHeight","size","Home","lazy","About","History","Register","App","autoLogin","fallback","Loading","path","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginedUser","error","historyUser","current","logIn","console","log","Uploader","file","filename","image","FormData","append","fileHash","MD5","toString","axios","defaults","headers","common","baseURL","method","url","data","Authorization","e","item","Object","extend","set","link","id","save","catch","AxiosUpload","err","page","limit","query","Query","equalTo","descending","skip","find","result","count","makeObservable","this","observable","action","name","values","pullUser","newName","imageName","hash","isUpLoading","serverFile","finally","newList","list","concat","listLength","hasMore","isLoading","length","message","context","createContext","useContext"],"mappings":"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","file":"static/js/main.18a3995a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/first.864f19d0.svg\";","import LogoUrl from \"../first.svg\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useStore } from \"../store\";\nconst Header = styled.header`\n  background-color: black;\n  display: flex;\n  flex-direction: row;\n  padding: 10px 100px;\n  align-items: center;\n`;\nconst Logo = styled.img`\n  height: 30px;\n`;\nconst StyledLink = styled(NavLink)`\n  color: white;\n  margin-left: 30px;\n  padding-bottom: 2px;\n  &.active {\n    border-bottom: 1px solid white;\n  }\n`;\nconst Login = styled.div`\n  margin-left: auto;\n  color: white;\n`;\nconst StyledButton = styled(Button)`\n  margin-right: 10px;\n  margin-left: 10px;\n`;\nconst Component = observer(() => {\n  const { AuthStore, UserStore, HistoryStore, ImageStore } = useStore();\n  const history = useHistory();\n  const HandleLogin = () => {\n    history.push(\"/login\");\n  };\n  const HandleLogOut = () => {\n    UserStore.resetUser();\n    HistoryStore.reset();\n    ImageStore.reset();\n    AuthStore.logOut();\n    history.push(\"/\");\n  };\n  const HandleRegister = () => {\n    history.push(\"/register\");\n  };\n  return (\n    <>\n      <Header>\n        <Logo src={LogoUrl} alt={Logo} />\n        <nav>\n          <StyledLink to=\"/\" exact activeClassName=\"active\">\n            首页\n          </StyledLink>\n          <StyledLink to=\"/history\" activeClassName=\"active\">\n            上传历史\n          </StyledLink>\n          <StyledLink to=\"/about\" activeClassName=\"active\">\n            关于\n          </StyledLink>\n        </nav>\n        <Login>\n          {UserStore.currentUser ? (\n            <>\n              {UserStore.currentUser.attributes.username}\n              <StyledButton type=\"primary\" onClick={HandleLogOut}>\n                注销\n              </StyledButton>\n            </>\n          ) : (\n            <>\n              <StyledButton type=\"primary\" onClick={HandleLogin}>\n                登录\n              </StyledButton>\n              <StyledButton type=\"primary\" onClick={HandleRegister}>\n                注册\n              </StyledButton>\n            </>\n          )}\n        </Login>\n      </Header>\n    </>\n  );\n});\n\nexport default Component;\n","import styled from \"styled-components\";\nconst Footer = styled.footer`\n  padding: 10px 100px;\n  text-align: center;\n  color: #aaa;\n  font-size: 12px;\n`;\nfunction component() {\n  return (\n    <Footer>\n      <p>感谢Imgur及LeanCloud提供的免费服务</p>\n    </Footer>\n  );\n}\nexport default component;\n","import { Spin, Space, Col, Row } from \"antd\";\n\nfunction component() {\n  return (\n    <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n      <Col>\n        <Space size=\"middle\">\n          <Spin size=\"large\" />\n        </Space>\n      </Col>\n    </Row>\n  );\n}\nexport default component;\n","import { lazy, Suspense } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Loading from \"./components/Loading\";\nimport \"./App.css\";\nimport \"./reset.css\";\nimport \"./global.css\";\nimport { useStore } from \"./store\";\n\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst About = lazy(() => import(\"./pages/About\"));\nconst History = lazy(() => import(\"./pages/History\"));\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\n\nconst App = () => {\n  const { UserStore } = useStore();\n  UserStore.autoLogin();\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n","import AV, { User } from \"leancloud-storage\";\nimport axios from \"axios\";\nimport MD5 from \"crypto-js/md5\";\n\nAV.init({\n  appId: \"2DYaDCQetWnTHjsa6ovwAka9-gzGzoHsz\",\n  appKey: \"xtVxgssNxOXPbBdfPIWrKGoW\",\n  serverURL: \"https://2dyadcqe.lc-cn-n1-shared.com\",\n});\n\nconst AxiosUpload = (image: any, filename: string) => {\n  const accessToken = \"Bearer 1b43d718f8c86689f09d3bface210dbf93da03a1\";\n  const clientID = \"Client-ID 19f50553247062b\";\n  let file = new FormData();\n  file.append(\"image\", image);\n  file.append(\"description\", filename);\n\n  let fileHash = MD5(image).toString();\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + accessToken;\n  axios.defaults.baseURL = \"https://api.imgur.com/3/\";\n  return new Promise((resolve, reject) => {\n    axios({\n      method: \"POST\",\n      url: \"/image\",\n      data: file,\n      headers: {\n        Authorization: clientID,\n      },\n    })\n      .then((e: any) => {\n        const Item = AV.Object.extend(\"ImageInfo\");\n        const item = new Item();\n        item.set(\"title\", filename);\n        item.set(\"owner\", AV.User.current());\n        item.set(\"link\", e.data.data.link);\n        item.set(\"hash\", fileHash);\n        item.set(\"imageId\", e.data.data.id);\n        item.save();\n        console.log(e);\n        resolve(e);\n      })\n      .catch((e) => reject(e));\n  });\n};\n\nconst Auth = {\n  register(username: string, password: string) {\n    let user = new User();\n    user.setUsername(username);\n    user.setPassword(password);\n    return new Promise((resolve, reject) => {\n      user.signUp().then(\n        (loginedUser) => resolve(loginedUser),\n        (error) => reject(error)\n      );\n    });\n  },\n  autoLogin() {\n    return new Promise((resolve, reject) => {\n      const historyUser = AV.User.current();\n      if (historyUser) {\n        resolve(historyUser);\n      } else {\n        reject(\"无历史登录用户\");\n      }\n    });\n  },\n  login(username: string, password: string) {\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(\n        (loginedUser) => resolve(loginedUser),\n        (error) => reject(error)\n      );\n    });\n  },\n  logout() {\n    User.logOut().then((loginedUser) => console.log(loginedUser + \"注销成功\"));\n  },\n  getCurrentUser() {\n    return User.current();\n  },\n};\n\nconst Uploader = {\n  uploadImage(file: any, filename: string) {\n    return new Promise((resolve, reject) => {\n      AxiosUpload(file, filename)\n        .then((e: any) => {\n          resolve(e);\n        })\n        .catch((err) => reject(err));\n    });\n  },\n  getHistory(page: number, limit: number) {\n    const query = new AV.Query(\"ImageInfo\");\n    query.equalTo(\"owner\", AV.User.current());\n    query.descending(\"createdAt\");\n    query.limit(limit);\n    query.skip(limit * page);\n    console.log(\"sent request\");\n    return new Promise((resolve, reject) => {\n      query.find().then(\n        (result) => {\n          resolve(result);\n        },\n        (err) => reject(err)\n      );\n    });\n  },\n  getDataLength() {\n    const query = new AV.Query(\"ImageInfo\");\n    query.equalTo(\"owner\", AV.User.current());\n    return new Promise((resolve) => {\n      query.count().then((count: number) => {\n        resolve(count as number);\n      });\n    });\n  },\n};\nexport { Auth, Uploader };\n","import { Auth } from \"../models\";\nimport { action, makeObservable, observable } from \"mobx\";\nclass UserStore {\n  @observable currentUser: any = null;\n  constructor() {\n    makeObservable(this);\n  }\n  @action pullUser() {\n    this.currentUser = Auth.getCurrentUser();\n  }\n  @action autoLogin() {\n    Auth.autoLogin()\n      .then((e) => {\n        this.currentUser = e;\n      })\n      .catch((e) => {\n        return;\n      });\n  }\n  @action resetUser() {\n    this.currentUser = null;\n  }\n}\nexport default new UserStore();\n","import { observable, action, makeObservable } from \"mobx\";\nimport { Auth } from \"../models\";\nimport UserStore from \"./users\";\nclass AuthStore {\n  @observable isLoading: boolean = false;\n  @observable values = {\n    username: \"\" as string,\n    password: \"\" as string,\n  };\n  constructor() {\n    makeObservable(this);\n  }\n  @action setUserName(name: string) {\n    this.values.username = name;\n  }\n  @action setPassword(password: string) {\n    this.values.password = password;\n  }\n  @action login() {\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password)\n        .then((user) => {\n          UserStore.pullUser();\n          resolve(user);\n        })\n        .catch((error) => {\n          console.log(\"登录失败\");\n          reject(error);\n        });\n    });\n  }\n  @action register() {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password)\n        .then((user) => {\n          UserStore.pullUser();\n          console.log(\"注册成功\");\n          resolve(user);\n        })\n        .catch((error) => {\n          console.log(\"注册失败\");\n          reject(error);\n        });\n    });\n  }\n  @action logOut() {\n    Auth.logout();\n    UserStore.resetUser();\n  }\n}\n\nexport default new AuthStore();\n","import { action, makeObservable, observable } from \"mobx\";\nimport { Uploader } from \"../models\";\nclass ImageStore {\n  @observable imageName: string = \"\";\n  @observable image: any = null;\n  @observable isUpLoading: boolean = false;\n  @observable serverFile: any = null;\n  @observable fileHash: string = \"\";\n  constructor() {\n    makeObservable(this);\n  }\n  @action setImageName(newName: string) {\n    this.imageName = newName;\n  }\n  @action setImage(image: any) {\n    this.image = image;\n  }\n  @action setHash(hash: string) {\n    this.fileHash = hash;\n  }\n  @action reset() {\n    this.imageName = \"\";\n    this.image = null;\n    this.isUpLoading = false;\n    this.serverFile = null;\n    this.fileHash = \"\";\n  }\n  @action upload() {\n    this.isUpLoading = true;\n    return new Promise((resolve, reject) => {\n      Uploader.uploadImage(this.image, this.imageName)\n        .then((file) => {\n          console.log(file);\n          this.serverFile = file;\n          resolve(file);\n        })\n        .catch((err) => reject(err))\n        .finally(() => {\n          this.isUpLoading = false;\n        });\n    });\n  }\n}\nexport default new ImageStore();\n","import { action, makeObservable, observable } from \"mobx\";\nimport { Uploader } from \"../models\";\nimport { message } from \"antd\";\n\nclass HistoryStore {\n  @observable list = [];\n  @observable listLength: number = 0;\n  @observable hasMore = true;\n  @observable isLoading: boolean = false;\n  @observable page = 0;\n  @observable limit = 10;\n  constructor() {\n    makeObservable(this);\n  }\n  @action append(newList: []) {\n    this.list = this.list.concat(newList);\n  }\n  @action getListLength() {\n    Uploader.getDataLength().then((count) => {\n      this.listLength = count as number;\n    });\n  }\n  @action reset() {\n    this.list = [];\n    this.listLength = 0;\n    this.hasMore = true;\n    this.isLoading = false;\n    this.page = 0;\n    this.limit = 10;\n  }\n  @action getHistory() {\n    console.log(\"进入函数\");\n    console.log(!this.isLoading && this.hasMore);\n    this.isLoading = true;\n    Uploader.getHistory(this.page, this.limit)\n      .then((result: any) => {\n        this.append(result);\n        this.page++;\n        if (result.length < this.limit) {\n          console.log(\"hasmore变了\");\n          this.hasMore = false;\n        }\n        console.log(this.listLength);\n        console.log(result);\n        this.isLoading = false;\n      })\n      .catch((err) => {\n        message.error(\"加载数据失败\").then();\n      })\n      .finally(() => {\n        this.isLoading = false;\n        console.log(this.isLoading);\n      });\n  }\n}\n\nexport default new HistoryStore();\n","import AuthStore from \"./auth\";\nimport UserStore from \"./users\";\nimport ImageStore from \"./image\";\nimport HistoryStore from \"./history\";\nimport { createContext, useContext } from \"react\";\n\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore,\n});\n\nexport const useStore = () => useContext(context);\n"],"sourceRoot":""}