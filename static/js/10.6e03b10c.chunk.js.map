{"version":3,"sources":["components/Tips.tsx","components/Uploader.tsx","pages/Home.tsx"],"names":["Component","observer","children","UserStore","useStore","Tips","styled","div","Welcome","currentUser","attributes","username","Dragger","Upload","ImageStore","useEffect","reset","props","showUploadList","beforeUpload","file","message","warning","then","test","type","size","error","setImage","setImageName","name","upload","console","log","success","catch","err","Img","img","Wrapper","className","InboxOutlined","serverFile","src","data","link","alt","span","readOnly","value","id","Uploader"],"mappings":"gLAIMA,EAAYC,aAAS,YAAwB,IAArBC,EAAoB,EAApBA,SACpBC,EAAcC,cAAdD,UACFE,EAAOC,IAAOC,IAAV,4NAUJC,EAAUF,IAAOC,IAAV,yEAIb,OACE,mCACGJ,EAAUM,YACT,eAACD,EAAD,qBAAiBL,EAAUM,YAAYC,WAAWC,YAElD,cAACN,EAAD,UAAOH,SAMAF,O,sJC2GAA,EAnIGC,aAAS,WACzB,IAAQW,EAAYC,IAAZD,QACR,EAAkCR,cAA1BU,EAAR,EAAQA,WAAYX,EAApB,EAAoBA,UACpBY,qBAAU,WACR,OAAO,WACLD,EAAWE,WAEZ,IACH,IAAMC,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAACC,GACb,OAA8B,OAA1BjB,EAAUM,aACZY,IAAQC,QAAQ,0DAAaC,QACtB,GAEJ,wCAAwCC,KAAKJ,EAAKK,MAInDL,EAAKM,KAAO,SACdL,IAAQM,MAAM,8BAAUJ,QACjB,IAETT,EAAWc,SAASR,GACpBN,EAAWe,aAAaT,EAAKU,MAC7BhB,EAAWiB,SACRR,MAAK,SAACH,GACLY,QAAQC,IAAI,4BACZZ,IAAQa,QAAQ,wCAAUX,OAC1BS,QAAQC,IAAIb,MAEbe,OAAM,SAACC,GACNf,IAAQM,MAAM,4EAAgBJ,OAC9BS,QAAQC,IAAIG,OAET,IAnBLf,IAAQM,MAAM,yEAA4BJ,QACnC,KAqBPc,EAAM/B,IAAOgC,IAAV,qDAGHC,EAAUjC,IAAOC,IAAV,oMAUb,OACE,gCACE,uBACA,eAACK,EAAD,2BAAaK,GAAb,cACE,mBAAGuB,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,kGACA,mBAAGA,UAAU,kBAAb,uJAKD1B,EAAW4B,WACV,eAACH,EAAD,WACE,0DACA,+BACE,6BACE,cAACF,EAAD,CAAKM,IAAK7B,EAAW4B,WAAWE,KAAKA,KAAKC,KAAMC,IAAI,OAEtD,uBACA,+BACE,gEACA,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,cAAC,IAAD,CACEtB,KAAK,OACLuB,UAAQ,EACRC,MAAOnC,EAAW4B,WAAWE,KAAKA,KAAKC,YAI7C,uBACA,+BACE,4CACA,cAAC,IAAD,CAAKE,KAAM,EAAX,SACE,cAAC,IAAD,CACEtB,KAAK,OACLuB,UAAQ,EACRC,MACE,yDAOAnC,EAAW4B,WAAWE,KAAKA,KAAKM,GAPhC,YAWApC,EAAW4B,WAAWE,KAAKA,KAAKC,KAXhC,wHAsBR,uBACA,+BACE,gDACA,cAAC,IAAD,CAAKE,KAAM,EAAX,SACE,cAAC,IAAD,CACEtB,KAAK,OACLuB,UAAQ,EACRC,MACE,WAAanC,EAAW4B,WAAWE,KAAKA,KAAKC,KAAO,iBAO9D,W,SChIJ7C,EAAYC,aAAS,WACHG,cAAdD,UAAR,IACMoC,EAAUjC,IAAOC,IAAV,+EAIb,OACE,eAACgC,EAAD,WACE,cAAClC,EAAA,EAAD,2EACA,cAAC8C,EAAD,UAKSnD","file":"static/js/10.6e03b10c.chunk.js","sourcesContent":["import { observer } from \"mobx-react\";\nimport { useStore } from \"../store\";\nimport styled from \"styled-components\";\n\nconst Component = observer(({ children }: any) => {\n  const { UserStore } = useStore();\n  const Tips = styled.div`\n    background: orange;\n    width: 100%;\n    margin: 30px 0;\n    padding: 10px;\n    color: #fff;\n    -webkit-border-radius: 4px;\n    -moz-border-radius: 4px;\n    border-radius: 4px;\n  `;\n  const Welcome = styled.div`\n    margin: 30px 0;\n    font-size: 24px;\n  `;\n  return (\n    <>\n      {UserStore.currentUser ? (\n        <Welcome>Hello, {UserStore.currentUser.attributes.username}</Welcome>\n      ) : (\n        <Tips>{children}</Tips>\n      )}\n    </>\n  );\n});\n\nexport default Component;\n","import { observer } from \"mobx-react\";\nimport { useStore } from \"../store\";\nimport { Upload, message, Input, Col } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport { useEffect } from \"react\";\n\nconst Component = observer(() => {\n  const { Dragger } = Upload;\n  const { ImageStore, UserStore } = useStore();\n  useEffect(() => {\n    return () => {\n      ImageStore.reset();\n    };\n  }, []);\n  const props = {\n    showUploadList: false,\n    beforeUpload: (file: any) => {\n      if (UserStore.currentUser === null) {\n        message.warning(\"请先登录再上传图片\").then();\n        return false;\n      }\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/gi.test(file.type)) {\n        message.error(\"只能上传png/svg/jpg/gif格式的图片\").then();\n        return false;\n      }\n      if (file.size > 1024 * 1024 * 5) {\n        message.error(\"图片最大5M\").then();\n        return false;\n      }\n      ImageStore.setImage(file);\n      ImageStore.setImageName(file.name);\n      ImageStore.upload()\n        .then((file) => {\n          console.log(\"上传成功\");\n          message.success(\"图片上传成功\").then();\n          console.log(file);\n        })\n        .catch((err) => {\n          message.error(\"图片上传失败，请重新上传\").then();\n          console.log(err);\n        });\n      return false;\n    },\n  };\n  const Img = styled.img`\n    max-width: 300px;\n  `;\n  const Wrapper = styled.div`\n    margin: 20px 0;\n    padding: 10px;\n    border: 1px dashed lightgray;\n    display: flex;\n    flex-direction: column;\n    h1 {\n      font-size: 24px;\n    }\n  `;\n  return (\n    <div>\n      <br />\n      <Dragger {...props}>\n        <p className=\"ant-upload-drag-icon\">\n          <InboxOutlined />\n        </p>\n        <p className=\"ant-upload-text\">点击或将图片拖拽到此区域上传</p>\n        <p className=\"ant-upload-hint\">\n          仅支持单个文件上传，仅支持jpg、jpeg、gif、png格式文件\n        </p>\n      </Dragger>\n\n      {ImageStore.serverFile ? (\n        <Wrapper>\n          <h1>上传预览</h1>\n          <ul>\n            <li>\n              <Img src={ImageStore.serverFile.data.data.link} alt=\"\" />\n            </li>\n            <br />\n            <li>\n              <strong>分享链接 :</strong>\n              <Col span={8}>\n                <Input\n                  type=\"text\"\n                  readOnly\n                  value={ImageStore.serverFile.data.data.link}\n                />\n              </Col>\n            </li>\n            <br />\n            <li>\n              <strong>HTML :</strong>\n              <Col span={8}>\n                <Input\n                  type=\"text\"\n                  readOnly\n                  value={\n                    \"<blockquote className=\" +\n                    \"imgur-embed-pub\" +\n                    \" lang\" +\n                    \"=\" +\n                    \"en\" +\n                    \" data-id\" +\n                    \"=\" +\n                    ImageStore.serverFile.data.data.id +\n                    \">\" +\n                    \"<a\" +\n                    \" href=\" +\n                    ImageStore.serverFile.data.data.link +\n                    \">View post on imgur.com</a>\" +\n                    \" </blockquote><script async src=\" +\n                    \"//s.imgur.com/min/embed.js\" +\n                    \" charSet=\" +\n                    \"utf-8\" +\n                    \"></script>\"\n                  }\n                />\n              </Col>\n            </li>\n            <br />\n            <li>\n              <strong>Markdown :</strong>\n              <Col span={8}>\n                <Input\n                  type=\"text\"\n                  readOnly\n                  value={\n                    \"[Imgur](\" + ImageStore.serverFile.data.data.link + \")\"\n                  }\n                />\n              </Col>\n            </li>\n          </ul>\n        </Wrapper>\n      ) : null}\n    </div>\n  );\n});\nexport default Component;\n","import { observer } from \"mobx-react\";\nimport { useStore } from \"../store\";\nimport Uploader from \"../components/Uploader\";\nimport styled from \"styled-components\";\nimport Tips from \"../components/Tips\";\n\nconst Component = observer(() => {\n  const { UserStore } = useStore();\n  const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n  `;\n  return (\n    <Wrapper>\n      <Tips>请先登录再使用此服务</Tips>\n      <Uploader />\n    </Wrapper>\n  );\n});\n\nexport default Component;\n"],"sourceRoot":""}