{"version":3,"sources":["pages/Register.tsx"],"names":["Components","history","useHistory","AuthStore","useStore","Wrapper","styled","div","Title","h1","validateLengthAndFormat","rule","value","length","Promise","reject","test","resolve","name","labelCol","span","wrapperCol","onFinish","values","console","log","setUserName","username","setPassword","password","register","then","push","catch","error","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","validator","Password","getFieldValue","offset","type","htmlType"],"mappings":"kNAuHeA,UAnHI,WACjB,IAAMC,EAAUC,cACRC,EAAcC,cAAdD,UAkBFE,EAAUC,IAAOC,IAAV,qJAMPC,EAAQF,IAAOG,GAAV,uGAKLC,EAA0B,SAACC,EAAWC,GAC1C,OAAIA,EAAMC,OAAS,GAAKD,EAAMC,OAAS,GAC9BC,QAAQC,OAAO,oEACpB,KAAKC,KAAKJ,GAAeE,QAAQC,OAAO,kFACrCD,QAAQG,WAQjB,OACE,eAACZ,EAAD,WACE,cAACG,EAAD,uCACA,eAAC,IAAD,CACEU,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,SAnDW,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBpB,EAAUuB,YAAYH,EAAOI,UAC7BxB,EAAUyB,YAAYL,EAAOM,UAC7B1B,EAAU2B,WACPC,MAAK,WACJ9B,EAAQ+B,KAAK,QAEdC,OAAM,SAACC,GACNV,QAAQC,IAAI,gEACZD,QAAQC,IAAIS,OA0CZC,eAtCiB,SAACC,GACtBZ,QAAQC,IAAI,UAAWW,IAsCnBC,aAAa,MAVf,UAYE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAEX,CACEC,UAAWjC,IATjB,SAaE,cAAC,IAAD,MAGF,cAAC,IAAK4B,KAAN,CACEC,MAAM,eACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CAAEC,UAAWjC,IARjB,SAWE,cAAC,IAAMkC,SAAP,MAEF,cAAC,IAAKN,KAAN,CACEC,MAAM,2BACNrB,KAAK,kBACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CAxDG,SAAC,GAAD,IAAGG,EAAH,EAAGA,cAAH,MAAgD,CACtEF,UADsE,SAC5DhC,EAAWC,GACnB,OAAIiC,EAAc,cAAgBjC,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,kDA+CpB,SAWE,cAAC,IAAM6B,SAAP,MAEF,cAAC,IAAKN,KAAN,CACEjB,WAAY,CACVyB,OAAQ,EACR1B,KAAM,GAHV,SAME,cAAC,IAAD,CAAQ2B,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/13.ad07489d.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { useStore } from \"../store\";\nimport { useHistory } from \"react-router-dom\";\nconst Components = () => {\n  const history = useHistory();\n  const { AuthStore } = useStore();\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n    AuthStore.setUserName(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.register()\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"注册失败，请重新注册\");\n        console.log(error);\n      });\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  const Wrapper = styled.div`\n    max-width: 600px;\n    margin: 30px auto;\n    padding: 20px;\n    box-shadow: 1px 1px 1px 1px rgb(0, 0, 0, 0.2);\n  `;\n  const Title = styled.h1`\n    text-align: center;\n    margin-bottom: 30px;\n    font-size: 32px;\n  `;\n  const validateLengthAndFormat = (rule: any, value: any) => {\n    if (value.length < 4 || value.length > 10)\n      return Promise.reject(\"长度需要在4-10个字符之间\");\n    if (/\\W/.test(value)) return Promise.reject(\"只能包含数字、字母和下划线\");\n    return Promise.resolve();\n  };\n  const confirmPassword = ({ getFieldValue }: { getFieldValue: any }) => ({\n    validator(rule: any, value: any) {\n      if (getFieldValue(\"password\") === value) return Promise.resolve();\n      return Promise.reject(\"两次密码不一致\");\n    },\n  });\n  return (\n    <Wrapper>\n      <Title>注册账户</Title>\n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 4,\n        }}\n        wrapperCol={{\n          span: 18,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"请输入用户名\",\n            },\n            {\n              validator: validateLengthAndFormat,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"请输入密码\",\n            },\n            { validator: validateLengthAndFormat },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          label=\"确认密码\"\n          name=\"confirmPassword\"\n          rules={[\n            {\n              required: true,\n              message: \"请再次输入密码\",\n            },\n            confirmPassword,\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            offset: 4,\n            span: 2,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            注册\n          </Button>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default Components;\n"],"sourceRoot":""}